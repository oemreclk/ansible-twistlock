---
- name: Set facts for each oc_server
  ansible.builtin.set_fact:
    cluster_name: "{{ openshift_clusters[item].api_endpoint.split('.')[1] }}"

- name: Defenders - Deploy - DaemonSet - Get Defender yaml
  uri:
    url: https://{{ twistlock_console }}/api/{{ apiversion }}/defenders/daemonset.yaml
    method: POST
    body: {
            "consoleAddr": "{{ twistlock_defender }}",
            "cluster": "{{ cluster_name }}",
            "namespace": "{{ namespace }}",
            "orchestration": "openshift",
            "containerRuntime": "crio",
            "privileged": false,
            "serviceaccounts": true,
            "istio": false,
            "collectPodLabels": true,
            "memoryLimit": 2000,
            "cpuLimit": 1500,
            "selinux": true
            }
    user: "{{ twistlock.username }}"
    password: "{{ twistlock.password }}"
    dest: defender-ds.yaml
    mode: 0755
    force_basic_auth: yes
    validate_certs: no
    body_format: json
    status_code: 200
  register: result
  until: result.status == 200
  retries: 1
  delay: 10
  delegate_to: localhost
  when: repo is not defined

- name: Defenders - Deploy - DaemonSet - Get Defender yaml
  uri:
    url: https://{{ twistlock_console }}/api/{{ apiversion }}/defenders/daemonset.yaml
    method: POST
    body: {
            "consoleAddr": "{{ twistlock_defender }}",
            "cluster": "{{ cluster_name }}",
            "namespace": "{{ namespace }}",
            "orchestration": "openshift",
            "containerRuntime": "crio",
            "privileged": false,
            "serviceaccounts": true,
            "istio": false,
            "collectPodLabels": true,
            "memoryLimit": 2000,
            "cpuLimit": 1500,
            "image": "{{ repo }}:{{ defender_version }}",
            "selinux": true
            }
    user: "{{ twistlock.username }}"
    password: "{{ twistlock.password }}"
    dest: defender-ds.yaml
    mode: 0755
    force_basic_auth: yes
    validate_certs: no
    body_format: json
    status_code: 200
  register: result
  until: result.status == 200
  retries: 1
  delay: 10
  delegate_to: localhost
  when: repo is defined

- name: Debug Yaml Before parsing
  ansible.builtin.command:
    cmd: cat defender-ds.yaml

- name: Read the original YAML file
  ansible.builtin.slurp:
    src: defender-ds.yaml
  register: original_yaml

- name: Split the YAML content into documents
  ansible.builtin.set_fact:
    yaml_documents: "{{ original_yaml.content | b64decode | from_yaml_all }}"

- name: Filter DaemonSet, Service and Secret documents
  set_fact:
    filtered_documents: "{{ yaml_documents | selectattr('kind', 'in', ['DaemonSet', 'Service', 'Secret']) | list }}"

- name: Convert filtered documents to YAML with separators
  set_fact:
    filtered_yaml: "{{ filtered_documents | map('to_nice_yaml') | join('---\n') }}"

- name: Write the filtered documents to a new YAML file
  copy:
    content: "---\n{{ filtered_yaml }}"
    dest: filtered_twistlock.yml

- name: Debug Yaml Before parsing
  ansible.builtin.command:
    cmd: cat filtered_twistlock.yml

- name: Install Defender daemonset YAML
  redhat.openshift.k8s:
    state: present
    src: filtered_twistlock.yml
    api_key: "{{ openshift_clusters[item].sa_token }}"
    host: "{{ openshift_clusters[item].api_endpoint }}"
    validate_certs: false
  register: result
  delegate_to: localhost

- name: Display deployment result
  debug:
    msg: "Defender DaemonSet deployment result: {{ result }}"
